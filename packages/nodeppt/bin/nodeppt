#!/usr/bin/env node
const program = require('commander');
const chalk = require('chalk');
const semver = require('semver');

const packageJson = require('../package.json');

const requiredVersion = packageJson.engines.node;
function checkNodeVersion(wanted, id) {
    if (!semver.satisfies(process.version, wanted)) {
        console.log(
            chalk.red(
                `当前你的 Node 版本为 ${process.version}，运行${id} 需要 Node ${wanted} 以上版本。
请升级你的 Node`
            )
        );
        process.exit(1);
    }
}
checkNodeVersion(requiredVersion, packageJson.name);

if (process.argv[2] && process.argv[2] === '-v') {
    process.argv[2] = '-V';
}
program.version(packageJson.version);

program
    .command('serve [entry]')
    .description('start local sever show slide')
    .option('-p, --port [port]', 'set server port ', 8080)
    .option('--https', 'use https ', 8080)
    .option('-H, --host [host]', 'set host address', '0.0.0.0')
    .action((entry, cmd) => {
        require('nodeppt-serve').serve(entry, cleanArgs(cmd));
    })
    .on('--help', function() {
        console.log('  Examples:');
        console.log();
        console.log('  nodeppt serve demo.md');
        console.log('  nodeppt serve demo.md -p 8080');
        console.log();
    });

program
    .command('build [entry]')
    .description('build html file')
    .action((entry, cmd) => {
        require('nodeppt-serve').build(entry, cleanArgs(cmd));
    })
    .on('--help', function() {
        console.log('  Examples:');
        console.log();
        console.log('  nodeppt build demo.md');
        console.log();
    });

program.parse(process.argv);

if (!program.args[0]) {
    process.stdout.write(program.helpInformation());
    program.emit('--help');
}

function cleanArgs(cmd) {
    const args = {};
    cmd.options.forEach(o => {
        const key = o.long.replace(/^--/, '');
        // if an option is not present and Command has a method with the same name
        // it should not be copied
        if (typeof cmd[key] !== 'function' && typeof cmd[key] !== 'undefined') {
            args[key] = cmd[key];
        }
    });
    return args;
}
